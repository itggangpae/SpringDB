<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- 오라클 DataSource -->
	<bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<property name="driverClassName"
			value="oracle.jdbc.driver.OracleDriver" />
		<property name="url"
			value="jdbc:log4jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="system" />
		<property name="password" value="wnddkd" />
	</bean>

	<!-- MySQL DataSource -->
	<bean id="mysqlDataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName"
			value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy" />
		<property name="url"
			value="jdbc:log4jdbc:mysql://localhost:3306/cyberadam?characterEncoding=UTF-8&amp;serverTimezone=UTC" />
		<property name="username">
			<value>root</value>
		</property>
		<property name="password">
			<value></value>
		</property>
	</bean>

	<context:annotation-config />
	<context:component-scan base-package="db" />

	<bean class="org.springframework.jdbc.core.JdbcTemplate"
		id="jdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<bean
		class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
		id="namedParameterJdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

	<!-- <bean class="org.springframework.jdbc.core.simple.SimpleJdbcInsert" 
		id="simpleJdbcInsert"> <constructor-arg ref="dataSource"></constructor-arg> 
		</bean> <bean class="org.springframework.jdbc.core.simple.SimpleJdbcCall" 
		id="simpleJdbcCall"> <constructor-arg ref="dataSource"></constructor-arg> 
		</bean> -->

	<!-- <bean class="org.springframework.jdbc.core.simple.SimpleJdbcInsert" 
		id="simpleJdbcInsert"> <constructor-arg ref="mysqlDataSource"></constructor-arg> 
		</bean> <bean class="org.springframework.jdbc.core.simple.SimpleJdbcCall" 
		id="simpleJdbcCall"> <constructor-arg ref="mysqlDataSource"></constructor-arg> 
		</bean> -->

	<!-- XML을 사용하는 MyBatis 설정을 위한 설정 -->
	<!-- <bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactory"> 
		<property name="dataSource" ref="dataSource" /> <property value="classpath:/mybatis/mybatis-config.xml" 
		name="configLocation" /> <property value="classpath:/mybatis/mappers/good.xml" 
		name="mapperLocations" /> </bean> <bean class="org.mybatis.spring.SqlSessionTemplate" 
		id="sqlSession" destroy-method="clearCache"> <constructor-arg name="sqlSessionFactory" 
		ref="sqlSessionFactory" /> </bean> -->

	<!-- MyBatis 인터페이스를 이용한 설정 -->
	<bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Mapper 인터페이스가 여러 개인 경우 위의 설정을 변경 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="db.mybatis.serviceimpl" />
	</bean>

	<!-- hibernate 사용을 위한 설정 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="mysqlDataSource" />
		<property name="mappingResources">
			<list>
				<value>db/hibernate/dao/good.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
			</value>
		</property>
	</bean>

	<!-- @Repository 클래스들에 대해 자동으로 예외를 Spring의 DataAccessException으로 일괄 변환해주는 
		설정 -->
	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven />

</beans>
